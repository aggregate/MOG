 .section .mdebug.abi32
 .nan legacy
 .gnu_attribute 4, 1
 .abicalls
 .text
 .ent memcpy
memcpy:
 addiu $29, $29, -16
 sw $4, 16($29)
 sw $5, 20($29)
 sw $6, 24($29)
 sw $0, 8($29)
 j DOL_L2
DOL_L3:
 lw $2, 8($29)
 addiu $2, $2, 3
 lw $3, 20($29)
 addu $2, $3, $2
 lb $2, 0($2)
 sll $3, $2, 24
 lw $2, 8($29)
 addiu $2, $2, 2
 lw $4, 20($29)
 addu $2, $4, $2
 lb $2, 0($2)
 sll $2, $2, 16
 addu $3, $3, $2
 lw $2, 8($29)
 addiu $2, $2, 1
 lw $4, 20($29)
 addu $2, $4, $2
 lb $2, 0($2)
 sll $2, $2, 8
 addu $2, $3, $2
 lw $3, 8($29)
 lw $4, 20($29)
 addu $3, $4, $3
 lb $3, 0($3)
 addu $2, $2, $3
 sw $2, 12($29)
 lw $2, 8($29)
 lw $3, 16($29)
 addu $2, $3, $2
 lw $3, 12($29)
 sw $3, 0($2)
 lw $2, 8($29)
 addiu $2, $2, 4
 sw $2, 8($29)
DOL_L2:
 lw $3, 8($29)
 lw $2, 24($29)
 slt $2, $3, $2
 bne $2, $0, DOL_L3
 lw $2, 16($29)
 addiu $29, $29, 16
 j $31
 .comm NSYSARGS, 4, 4
 .comm IPROC, 4, 4
 .comm NPROC, 4, 4
 .data
MAXFAC:
 .word 9
MAXITER:
 .word 3
 .text
 .ent fact
fact:
 addiu $29, $29, -32
 sw $31, 28($29)
 sw $4, 32($29)
 lw $2, 32($29)
 slt $2, $2, 2
 beq $2, $0, DOL_L6
 li $2, 1
 mtlo $2
 j DOL_L7
DOL_L6:
 lw $2, 32($29)
 addiu $2, $2, -1
 move $4, $2
 jal fact
 move $3, $2
 lw $2, 32($29)
 mult $3, $2
DOL_L7:
 mflo $2
 lw $31, 28($29)
 addiu $29, $29, 32
 j $31
 .ent main
main:
 addiu $29, $29, -48
 sw $31, 44($29)
 lui $2, hi16bitsIPROC
 lw $3, low16bitsIPROC($2)
 li $2, 3
 bne $3, $2, DOL_L9
 li $2, 98
 sb $2, 32($29)
 lbu $2, 32($29)
 addiu $2, $2, -1
 andi $2, $2, 0x00ff
 sb $2, 32($29)
 lb $2, 32($29)
 move $4, $2
 jal putchar
 j DOL_L10
DOL_L9:
 lui $2, hi16bitsIPROC
 lw $3, low16bitsIPROC($2)
 li $2, 3
 bne $3, $2, DOL_L11
 li $2, 97
 sb $2, 33($29)
 lbu $2, 33($29)
 addiu $2, $2, 1
 andi $2, $2, 0x00ff
 sb $2, 33($29)
 lb $2, 33($29)
 move $4, $2
 jal putchar
 j DOL_L10
DOL_L11:
 lui $2, hi16bitsIPROC
 lw $3, low16bitsIPROC($2)
 li $2, 4
 bne $3, $2, DOL_L12
 li $2, 97
 sb $2, 34($29)
 lbu $2, 34($29)
 addiu $2, $2, 10
 andi $2, $2, 0x00ff
 sb $2, 34($29)
 lbu $2, 34($29)
 addiu $2, $2, -8
 andi $2, $2, 0x00ff
 sb $2, 34($29)
 lb $2, 34($29)
 move $4, $2
 jal putchar
 j DOL_L10
DOL_L12:
 lui $2, hi16bitsIPROC
 lw $3, low16bitsIPROC($2)
 li $2, 5
 bne $3, $2, DOL_L13
 li $2, 6
 sw $2, 36($29)
 lw $4, 36($29)
 jal putint
 j DOL_L10
DOL_L13:
 sw $0, 28($29)
 j DOL_L14
DOL_L15:
 lui $2, hi16bitsIPROC
 lw $3, low16bitsIPROC($2)
 lw $2, 28($29)
 xor $3, $3, $2
 lui $2, hi16bitsMAXFAC
 lw $2, low16bitsMAXFAC($2)
 bne $2, $0, 1f
 div $0, $3, $2
 break 7
1:
 mfhi $2
 move $4, $2
 jal fact
 sw $2, 24($29)
 lw $2, 28($29)
 addiu $2, $2, 1
 sw $2, 28($29)
DOL_L14:
 lui $2, hi16bitsMAXITER
 lw $2, low16bitsMAXITER($2)
 lw $3, 28($29)
 slt $2, $3, $2
 bne $2, $0, DOL_L15
 lw $4, 24($29)
 jal putint
DOL_L10:
 move $4, $0
 jal exit
 .ent exit
exit:
 sw $4, 0($29)
 lui $2, hi16bitsNSYSARGS
 li $3, 3
 sw $3, low16bitsNSYSARGS($2)
 li $2, 16
 sw $0, 0($2)
 li $2, 20
 lw $3, 0($29)
 sw $3, 0($2)
 sys 0
 j $31
 .ent time
time:
 sw $4, 0($29)
 lui $2, hi16bitsNSYSARGS
 li $3, 3
 sw $3, low16bitsNSYSARGS($2)
 li $2, 16
 li $3, 1
 sw $3, 0($2)
 li $2, 32
 lw $3, 0($29)
 sw $3, 0($2)
 sys 0
 li $2, 16
 lw $2, 0($2)
 j $31
 .ent dup
dup:
 sw $4, 0($29)
 lui $2, hi16bitsNSYSARGS
 li $3, 3
 sw $3, low16bitsNSYSARGS($2)
 li $2, 16
 li $3, 2
 sw $3, 0($2)
 li $2, 20
 lw $3, 0($29)
 sw $3, 0($2)
 sys 0
 li $2, 16
 lw $2, 0($2)
 j $31
 .ent putchar
putchar:
 move $2, $4
 sb $2, 0($29)
 lui $2, hi16bitsNSYSARGS
 li $3, 2
 sw $3, low16bitsNSYSARGS($2)
 li $2, 16
 li $3, 3
 sw $3, 0($2)
 li $2, 20
 lb $3, 0($29)
 sw $3, 0($2)
 sys 0
 j $31
 .ent putint
putint:
 sw $4, 0($29)
 lui $2, hi16bitsNSYSARGS
 li $3, 2
 sw $3, low16bitsNSYSARGS($2)
 li $2, 16
 li $3, 9
 sw $3, 0($2)
 li $2, 20
 lw $3, 0($29)
 sw $3, 0($2)
 sys 0
 j $31
 .ent getchar
getchar:
 lui $2, hi16bitsNSYSARGS
 li $3, 2
 sw $3, low16bitsNSYSARGS($2)
 li $2, 16
 li $3, 4
 sw $3, 0($2)
 sys 0
 li $2, 16
 lw $2, 0($2)
 j $31
 .ent open
open:
 sw $4, 0($29)
 sw $5, 4($29)
 sw $6, 8($29)
 li $2, 16
 li $3, 5
 sw $3, 0($2)
 lui $2, hi16bitsNSYSARGS
 li $3, 1
 sw $3, low16bitsNSYSARGS($2)
 j DOL_L26
DOL_L27:
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $4, $2
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, -1
 lw $3, 0($29)
 addu $2, $3, $2
 lb $2, 0($2)
 sw $2, 0($4)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
DOL_L26:
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, -1
 lw $3, 0($29)
 addu $2, $3, $2
 lb $2, 0($2)
 bne $2, $0, DOL_L27
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 sw $0, 0($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $3, $2
 lw $2, 4($29)
 sw $2, 0($3)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $3, $2
 lw $2, 8($29)
 sw $2, 0($3)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 sys 0
 li $2, 16
 lw $2, 0($2)
 j $31
 .ent close
close:
 sw $4, 0($29)
 li $2, 16
 li $3, 7
 sw $3, 0($2)
 lui $2, hi16bitsNSYSARGS
 li $3, 1
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $3, $2
 lw $2, 0($29)
 sw $2, 0($3)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 li $2, 1
 j $31
 .ent read
read:
 addiu $29, $29, -32
 sw $31, 28($29)
 sw $4, 32($29)
 sw $5, 36($29)
 sw $6, 40($29)
 li $2, 16
 li $3, 7
 sw $3, 0($2)
 lui $2, hi16bitsNSYSARGS
 li $3, 1
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $3, $2
 lw $2, 32($29)
 sw $2, 0($3)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $3, $2
 lw $2, 40($29)
 sw $2, 0($3)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 sys 0
 lw $4, 36($29)
 li $5, 16
 lw $6, 40($29)
 jal memcpy
 li $2, 1
 lw $31, 28($29)
 addiu $29, $29, 32
 j $31
 .ent write
write:
 addiu $29, $29, -32
 sw $31, 28($29)
 sw $4, 32($29)
 sw $5, 36($29)
 sw $6, 40($29)
 li $2, 16
 li $3, 8
 sw $3, 0($2)
 lui $2, hi16bitsNSYSARGS
 li $3, 1
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $3, $2
 lw $2, 32($29)
 sw $2, 0($3)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $3, $2
 lw $2, 40($29)
 sw $2, 0($3)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addiu $2, $2, 4
 sll $2, $2, 2
 move $4, $2
 lw $5, 36($29)
 lw $6, 40($29)
 jal memcpy
 lw $2, 40($29)
 bgez $2, DOL_L34
 addiu $2, $2, 3
DOL_L34:
 sra $2, $2, 2
 addiu $3, $2, 1
 lui $2, hi16bitsNSYSARGS
 lw $2, low16bitsNSYSARGS($2)
 addu $3, $3, $2
 lui $2, hi16bitsNSYSARGS
 sw $3, low16bitsNSYSARGS($2)
 sys 0
 li $2, 16
 lw $2, 0($2)
 lw $31, 28($29)
 addiu $29, $29, 32
 j $31
